#RF阻抗匹配網路
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.gridspec as gridspec
from itertools import product

# 頻率與常數
f = 13.56e6
w = 2 * np.pi * f
Z0 = 50
ZL = 10 + 50j  # 偏感性負載

# 使用 E24 系列元件值
C_E24 = np.array([100, 110, 120, 130, 150, 160, 180, 200, 220, 240,
                  270, 300, 330, 360, 390, 430, 470, 510, 560, 620,
                  680, 750, 820, 910]) * 1e-12  # 法拉
L_E24 = np.array([0.10, 0.11, 0.12, 0.13, 0.15, 0.16, 0.18, 0.20, 0.22, 0.24,
                  0.27, 0.30, 0.33, 0.36, 0.39, 0.43, 0.47, 0.51, 0.56, 0.62,
                  0.68, 0.75, 0.82, 0.91]) * 1e-6  # 亨利

# 搜尋最佳匹配元件
best_swr = float('inf')
best_pair = None

for C_val, L_val in product(C_E24, L_E24):
    ZC = 1 / (1j * w * C_val)
    ZL_match = 1j * w * L_val
    Z1 = ZL + ZC
    Zin = 1 / (1 / Z1 + 1 / ZL_match)
    Gamma = (Zin - Z0) / (Zin + Z0)
    SWR = (1 + abs(Gamma)) / (1 - abs(Gamma))
    if SWR < best_swr:
        best_swr = SWR
        best_pair = (C_val, L_val, Zin, Gamma)

C_best, L_best, Zin_best, Gamma_best = best_pair
logSWR_best = np.log10((1 + abs(Gamma_best)) / (1 - abs(Gamma_best)))

# -------- 繪圖 --------
fig = plt.figure(figsize=(10, 6))
gs = gridspec.GridSpec(1, 2, width_ratios=[28, 1], wspace=0.02)
ax_main = fig.add_subplot(gs[0])

# 建立 C-L 掃描網格
C_vals = C_E24
L_vals = L_E24
logSWR_grid = np.zeros((len(L_vals), len(C_vals)))

for i, L_val in enumerate(L_vals):
    for j, C_val in enumerate(C_vals):
        ZC = 1 / (1j * w * C_val)
        ZL_match = 1j * w * L_val
        Z1 = ZL + ZC
        Zin = 1 / (1 / Z1 + 1 / ZL_match)
        Gamma = (Zin - Z0) / (Zin + Z0)
        SWR = (1 + abs(Gamma)) / (1 - abs(Gamma))
        logSWR_grid[i, j] = np.log10(SWR)

# 畫圖
cp = ax_main.contourf(C_vals * 1e12, L_vals * 1e6, logSWR_grid, levels=50, cmap='Spectral')
contour_lines = ax_main.contour(C_vals * 1e12, L_vals * 1e6, logSWR_grid,
                                levels=np.linspace(logSWR_grid.min(), logSWR_grid.max(), 20),
                                colors='white', linewidths=0.6)
ax_main.clabel(contour_lines, inline=True, fontsize=8, fmt='%.1f')

# 匹配點（最小SWR的E24點）
ax_main.plot(C_best * 1e12, L_best * 1e6, 'ro', label='Best E24 Match')
ax_main.text(C_best * 1e12 * 1.05, L_best * 1e6,
             f'{C_best*1e12:.1f} pF,\n{L_best*1e6:.2f} μH', color='black', fontsize=9)

ax_main.set_xscale('log')
ax_main.set_yscale('log')
ax_main.set_xlabel('Capacitance (pF)')
ax_main.set_ylabel('Inductance (μH)')
ax_main.set_title('log(SWR) Heatmap (E24 Components)')
ax_main.legend()
ax_main.tick_params(which='both', direction='in', top=True, right=True)

# colorbar
ax_cb = fig.add_subplot(gs[1])
cbar = plt.colorbar(cp, cax=ax_cb)
cbar.set_label('log₁₀(SWR)')
plt.subplots_adjust(left=0.1, right=0.9, top=0.9, bottom=0.1)
plt.show(), C_best, L_best, abs(Gamma_best), (1 + abs(Gamma_best)) / (1 - abs(Gamma_best))
